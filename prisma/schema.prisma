// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        String    @id @default(uuid())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    email     String    @unique
    firstname String
    lastname  String
    bioUser   String?
    Article   Article[]
    Blog      Blog[]
    Comment   Comment[]
    Plant     Plant[]
}

// en 3eme arg dans @relation ' onDelete: Cascade ' = si on supprime l'user tout ce qui a en rapport avec lui sera supprim√©
model Plant {
    id            String          @id @default(uuid())
    createdAt     DateTime        @default(now())
    updatedAt     DateTime        @updatedAt
    datePublished DateTime
    title         String
    description   String
    user          User            @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId        String
    PlantCategory PlantCategory[]
    Image         Image[]
}

model Article {
    id            String   @id @default(uuid())
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    datePublished DateTime
    title         String
    description   String
    user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId        String
    Image         Image[]
}

model Blog {
    id            String   @id @default(uuid())
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    datePublished DateTime
    title         String
    description   String
    user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId        String
}

model Comment {
    id            String   @id @default(uuid())
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    datePublished DateTime
    content       String
    user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId        String
}

model PlantCategory {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    title     String
    plant     Plant    @relation(fields: [plantId], references: [id], onDelete: Cascade)
    plantId   String
}

model Image {
    id        String   @id @default(uuid())
    title     String
    data      Bytes
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    Plant     Plant?   @relation(fields: [plantId], references: [id])
    plantId   String?
    Article   Article? @relation(fields: [articleId], references: [id])
    articleId String?
}
